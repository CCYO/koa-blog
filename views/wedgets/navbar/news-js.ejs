<script>
    $(function () {
        let { newsList } =  window.data
        
        let $newsDropdown = $('#newsDropdown')
        let $readMore = $('#readMore')
        let api_readMore = '/api/news/readMore'

        $newsDropdown.click(handle_confirmNews)
        $readMore.click(handle_readMore)

        async function handle_readMore(){
            let { markTime, page } = newsList
            let { errno, data, msg } = await axios.post(api_readMore, { markTime, page: page + 1 })

            if(!errno){
                console.log('@data => ', data)
            }else{
                console.log('@msg => ', msg)
            }
        }

        function handle_confirmNews(){
            let newsList_id = newsList.unconfirm.reduce( (init, curVal, index) => {
                let {type, id} = curVal
                type === 1 && init.people.push(id)
                type === 2 && init.blogs.push(id)
                return init
            }, {people: [], blogs: []})
        }

        async function readMore(e) {
            console.log('READMORE')
            e && e.preventDefault()
            let checkTime = {
                time: $('#navbarDropdown').attr('data-my-check-time'),
                type: $('#navbarDropdown').attr('data-my-check-type'),
                id: $('#navbarDropdown').attr('data-my-check-id')
            }

            let index = $('#navbarDropdown').attr('data-my-index')

            let window_news_count = (window.news) ? window.news.count : 0
            const {
                data: {
                    errno, data, msg
                }
            } = await axios.post('/api/user/readMore', { checkTime, index: index * 1 , window_news_count })

            if (!errno) {
                let {
                    htmlStr, //{ unconfirm, confirm }
                    more,
                    index,
                    news // { count, htmlStr, checkTime }
                } = data

                /* 處理響應資料(checkTime前的news) */
                for (prop in htmlStr) {
                    if (htmlStr[prop]) {
                        let title = (prop === 'unconfirm') ? $('#new-news-title') : $('#old-news-title')
                        title.toggle(true)
                        let news_hrs = $(`[data-my-hr="${prop}-news-hr"]`)
                        let target = news_hrs.length ? $(news_hrs[news_hrs.length - 1]) : title
                        target.after(htmlStr[prop])
                    }
                }

                if (news.count) {
                    /* checkTime 之後，若有新通知進來 */
                    //  重設「新通知提醒」UI
                    $('.new-count').text(news.count).toggle(true)
                    window.news = news
                }

                if (more) {
                    /* 重設 readMore btn 相關標示 */
                    $("#navbarDropdown").attr('data-my-index', index)
                } else {
                    $('#more_news').toggle(false)
                    $('#nonews').toggle(true)
                }
            } else {
                console.log('readMore 發生錯誤 => ', msg)
            }
        }

        async function showNewsList(e) {
            e.preventDefault()
            //  若初次渲染的view，confirm 當前顯示的新通知
            if ($(e.target).attr('data-my-first-render')) {
                //  蒐集fans、blog消息的 news_id
                //  payload = { fans: [], blogs: [] } 
                let payload = _getNoConfirmNews()

                //  confirm 當前 news
                let {
                    data: { errno, data, msg }
                } = await axios.post('/api/news/confirm', { payload })

                if (!errno) {
                    //  成功，重設、移除相關 data-set
                    console.log('Server已完成confirm')
                    //  移除「新通知數量」UI
                    $('.news-count').toggle(false)
                    //  修改「1st render views」的標示
                    $(e.target).attr('data-my-first-render', false)
                    //  移除「必須 confirm 的 news」的標示
                    $('li[data-my-news-type]').each((ind, item) => {
                        $(item).removeAttr('data-my-news-id')
                        $(item).removeAttr('data-my-news-type')
                    })
                    console.log('前端完成confirm UI 配製')
                } else {
                    console.log('confirm失敗 => ', msg)
                }
                return
            }

            //  若 window.news 有值，則以JQ直接插入，並confirm news
            if (window.news && window.news.count) {
                //  news = { count, htmlStr, checkTime }
                let { conut, htmlStr, checkTime } = window.news
                //  let payload = { fans: [], blogs: [] }

                $("#navbarDropdown")
                    .attr('data-my-first-render', true)
                    .attr('data-my-index', 0)
                    .attr('data-my-check-time', checkTime.time)
                    .attr('data-my-check-type', checkTime.type)
                    .attr('data-my-check-id', checkTime.id)
                $("#old-news-title").toggle(true)
                $("li[data-my-confirm]").remove()
                $("li[data-my-hr]").remove()
                $("#new-news-title").toggle(true).after(htmlStr)

                $('#more_news').toggle(true)
                $('#nonews').toggle(false)
                return
            }

            if ($('#more_news').css('display') === 'none') {
                await readMore()
                return
            }
        }

        function _getNoConfirmNews() {
            let payload = { fans: [], blogs: [] }
            //  蒐集fans、blog消息的 news_id
            $('li[data-my-news-type]').each((ind, item) => {
                if ($(item).attr('data-my-news-type') === 'fans') {
                    payload.fans.push($(item).attr('data-my-news-id'))
                }
                if ($(item).attr('data-my-news-type') === 'blog') {
                    payload.blogs.push($(item).attr('data-my-news-id'))
                }
            })
            return payload
        }
    })
</script>