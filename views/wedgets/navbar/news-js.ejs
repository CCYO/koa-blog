<script>
    $(function () {
        //  下拉選單鈕、通知鈕
        let $newsDropdown = $('#newsDropdown')
        //  通知比數span
        let $newsCount = $('.news-count')
        //  下拉選單內 的 readMore鈕
        let $readMore = $('#readMore')
        //  下拉選單內 的 沒有更多提醒
        let $noNews = $('#noNews')

        let api_news = '/api/news'
        let api_readMore = '/api/news/readMore'

        //  手動註冊 BS5 下拉選單
        var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
        var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
            return new bootstrap.Dropdown(dropdownToggleEl)
        })

        //  綁定 下拉選單鈕 的 click handle
        $newsDropdown.click(handle_dropDown)
        //  綁定 readMore鈕 的 click handle
        $readMore.click(moreNewsForReadMore)

        async function moreNewsForReadMore() {
            let newsList = window.data
            let markTime = newsList.markTime
            let listOfNewsId = newsList.listOfConfirmNewsId
            let payload = { markTime, listOfNewsId }

            let { data: { errno, data, msg } } = await axios.post(api_readMore, payload)
            if (errno) {
                alert('發生錯誤')
                console.log('@msg => ', msg)
                return
            }

            /*
             * numOfUnconfirm - 晚於 markTime 的 unconfirmNews 總數
             * total - userId 的通知總數
             * count - 此次 response 的 通知數量
             * htmlStr - { confirm: string, unconfirm: string } html字符格式的通知數據
             * ListOfConfirmNewsId - 此次 response 包含的 newsList 之 id 列表
            */
            let { numOfUnconfirm, total, count, htmlStr, listOfConfirmNewsId: { people, blogs } } = data

            //  若 numOfUnconfirm 有值，則
            if (numOfUnconfirm > 0) {
                //  通知鈕顯示筆數
                $newsCount.toggle(true).text(numOfUnconfirm)
                //  window.newsList.numOfUnconfirm 更新
                newsList.numOfUnconfirm = numOfUnconfirm
            }else{
                newsList.numOfUnconfirm = 0
            }

            //  window.newsList.count 更新
            newsList.count += count
            //  window.newsList.listOfConfirmNewsId 更新
            newsList.listOfConfirmNewsId.people = [...newsList.listOfConfirmNewsId.people, ...people]
            newsList.listOfConfirmNewsId.blogs = [...newsList.listOfConfirmNewsId.blogs, ...blogs]
            //  根據 response 添加通知內容
            for (prop in htmlStr) {
                let html = htmlStr[prop]
                if (!html) {
                    continue
                }
                let $hrs = $(`[data-my-hr='${prop}-news-hr']`)
                $hrs.length && $hrs.last().after(html) || $(`#${prop}-news-title`).toggle(true).after(html)
            }

            //  判斷下拉選單內的 readMore鈕 是否該顯示
            $readMore.toggle(more) && $noNews.toggle(!more)
        }

        async function moreNewsForDropDown() {
            let newsList = window.data
            let markTime = (new Date()).toISOString()
            let listOfNewsId = newsList.listOfConfirmNewsId
            let payload = { markTime, listOfNewsId }

            //  ajax 取得通知數據
            let { data: { errno, data, msg } } = await axios.post(api_readMore, payload)

            if (errno) {
                alert('發生錯誤')
                console.log('@msg => ', msg)
                return
            }

            /*
             * numOfUnconfirm - 晚於 markTime 的 unconfirmNews 總數
             * total - userId 的通知總數
             * count - 此次 response 的 通知數量
             * htmlStr - { confirm: string, unconfirm: string } html字符格式的通知數據
             * ListOfConfirmNewsId - 此次 response 包含的 newsList 之 id 列表
            */
            let { numOfunconfirm, total, count, htmlStr, listOfConfirmNewsId: { people, blogs } } = data

            //  若 numOfUnconfirm 有值，則
            if (numOfUnconfirm > 0) {
                //  通知鈕顯示筆數
                $newsCount.toggle(true).text(numOfUnconfirm)
                //  window.newsList.numOfUnconfirm 更新
                newsList.numOfUnconfirm = numOfUnconfirm
            }else{
                newsList.numOfUnconfirm = 0
            }


            //  window.newsList.total 更新
            newsList.total = total
            //  window.newsList.count 更新
            newsList.count = count
            //  window.newsList.listOfConfirmNewsId 更新
            newsList.listOfConfirmNewsId.people = people
            newsList.listOfConfirmNewsId.blogs = blogs

            //  window.newsList.markTime 更新
            newsList.markTime = markTime

            //  移除現有通知列成員
            $(`.news-item`).remove()
            $(`[data-my-hr]`).remove()
            //  根據 response 添加通知內容
            for (prop in htmlStr) {
                let html = htmlStr[prop]
                if (!html) {
                    continue
                }
                let $title = $(`#${prop}-news-title`)
                $title.toggle(true).after(html)
            }

            let more = newsList.total - newsList.count > 0
            //  判斷下拉選單內的 readMore鈕 是否該顯示
            $readMore.toggle(more) && $noNews.toggle(!more)

            //  顯示 BS5 下拉選單
            bootstrap.Dropdown.getInstance($newsDropdown[0]).show()
        }

        async function confirmNews() {
            let newsList = window.data
            let { listOfUnconfirmNewsId } = newsList
            let { data: { errno, data, msg } } = await axios.patch(api_news, { listOfNewsId: listOfUnConfirmNewsId })
            if (errno) {
                alert('confirm失敗')
                console.log('@msg => ', msg)
            }
            //  完成 confirm 的通知數據
            let { ListOfConfirmNewsId: { people, blogs }, count } = data
            newsList.listOfUnconfirmNewsId = undefined
            if (!newsList.listOfConfirmNewsId) {
                newsList.listOfConfirmNewsId = { people: [], blogs: [] }
            }
            newsList.listOfConfirmNewsId = {
                people: [...newsList.listOfConfirmNewsId.people, ...people],
                blogs: [...newsList.listOfConfirmNewsId.blogs, ...blogs]
            }
        }
        //  handle 顯示下拉選單
        async function handle_dropDown() {
            $newsCount.toggle(false)
            let newsList = window.data
            let { listOfUnconfirmNewsId, numOfUnconfirm } = window.data.newsList
            
            if (listOfUnconfirmNewsId) {
                //進到這邊，代表目前是頁面第一次點擊下拉選單鈕
                await confirmNews()
            }else if(numOfUnconfirm){
                await moreNewsForDropDown()
            }

            return
        }
    })
</script>