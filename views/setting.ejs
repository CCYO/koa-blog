<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <!-- BS5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
</head>

<body>
    <div class="container">
        <h3>修改個人資訊</h3>
        <form class="row">
            <div class="col-8 mx-auto">
                <div class="mb-3">
                    <label class="form-label w-100">信箱
                        <input type="text" class="form-control" name="email" aria-describedby="email_help"
                            autocomplete="off">
                        <div class="d-block">&nbsp;</div>
                    </label>
                </div>
                <div class="mb-3">
                    <label class="form-label w-100">密碼
                        <input type="password" class="form-control" name="password" data-retry='yes'
                            autocomplete="new-password">
                        <div class="d-block">&nbsp;</div>
                    </label>
                </div>
                <div class="mb-3">
                    <label for="nickname" class="form-label">暱稱
                        <input type="text" class="form-control" name="nickname" autocomplete="off">
                        <div class="d-block">&nbsp;</div>
                    </label>
                </div>
                <div class="mb-3">
                    <label class="form-label w-100">年齡
                        <input type="number" class="form-control" name="age" autocomplete="off">
                        <div class="d-block">&nbsp;</div>
                    </label>
                </div>
                <div class="mb-3">
                    <label class="form-label w-100">頭像
                        <input type="file" class="form-control" name="avatar" autocomplete="off">
                        <div class="d-block">&nbsp;</div>
                    </label>
                </div>
                <button type="submit" class="btn btn-primary">送出</button>
            </div>
        </form>
        <button id="logout">登出</button>
        <div id="eval" style="display: none"><%- JSON.stringify(user) %></div>
    </div>

    <%- include('wedgets/cdn') %>
    <%- include('wedgets/utils') %>
    <!-- 引入 Spark-MD5 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/spark-md5/3.0.2/spark-md5.min.js"></script>
    <script>
        let go = document.getElementById('eval')
        let user
        eval('user = ' + go.innerText)

        let hash
        let md5Hash_is_new = false
        //  input[name='avatar'].onchange handle：取得頭像hash
        $('input[name="avatar"]').addEventListener('change', getImgHash)

        $('form').addEventListener('submit', async (e) => {
            e.preventDefault()
            
            let api = '/api/user/'
            let formData = new FormData()

            if(hash){
                api += hash
            }else{
                api += '0'
            }
            for (item of e.target) {
                let { type, name, value } = item
                if ( type === 'file' && item.files[0]){
                    formData.append('avatar', item.files[0])
                }else if ((type !== 'submit') && value) {
                    formData.append(name, value)
                }
            }

            let {
                data: {
                    errno,
                    data,
                    msg
                }
            } = await axios.patch(api, formData)

            if (errno) {
                alert(msg)
            } else {
                console.log(data)
                user = data
                alert('資料更新完成!')
            }
        })

        // btn#logout.onclick handle：登出 
        $('#logout').addEventListener('click', logout)

        // 登出
        async function logout() {
            if (!confirm('真的要登出嗎?')) {
                return alert('對拉，多待一下拉')
            }

            const {
                data: {
                    errno,
                    data,
                    msg
                }
            } = await axios.get('/api/user/logout')

            if (!errno) {
                alert(data)
                location.href = '/register'
            }
        }


        async function getImgHash(e){
            let file = e.target.files[0]
            
            //  user.avatar 若有值，確認當前欲更新的 img md5hash 是否相同
            hash = await getMD5Hash(file)

            if(hash === user.avatar_hash){
                return alert('目前就是這個頭像唷！')
            }
        }

        //  返回 file 的 FileReader.result
        function getMD5Hash(file) {
            return new Promise((resolve, reject) => {
                let fr = new FileReader()
                fr.addEventListener('load', (evt) => {
                    if (fr.readyState === FileReader.DONE) {
                        let hash = SparkMD5.ArrayBuffer.hash(fr.result)
                        console.log('計算出的hash => ', hash)
                        resolve(hash)
                    }
                })
                fr.addEventListener('error', (error) => {
                    console.log('fr load 發生錯誤 => ', error)
                    reject(error)
                })
                fr.readAsArrayBuffer(file)
            })
        }

    </script>
</body>

</html>