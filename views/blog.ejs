<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@300&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://www.wangeditor.com/demo/css/view.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
    <!-- BS5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
    <style>
        * {
            font-family: 'Noto Sans TC', 'consolas';
            ;
        }

        body {
            background-color: rgba(255, 255, 200, .5);
        }

        .editor-content-view {
            background-color: rgba(255, 200, 200, .5);
            padding: 1rem;
            margin-bottom: 1rem;
        }

        #editor-container {
            border: 1px solid rgba(200, 200, 200, .8);
        }
    </style>

</head>

<body>
    <%- include('wedgets/navbar/index') %>
    <div class="container pt-2 pb-2">
        <div>
            <h1> <%= blog.title %> </h1>
            <div class="editor-content-view">
                <%- blog.html %>
            </div>
        </div>
        <div id="comment">
            <div id="editor-container"></div>
            <div id="list">
                <% blog.comments.length && blog.comments.forEach(({html, time, user: { id, nickname }}) => { %>
                <div><%- html %>
                    <a href="/other/<%= id %>"><%= nickname %> </a>
                    <span><%= time %> </span>
                </div>
                <% }) %>
            </div>
        </div>
    </div>
    </div>
    <div data-my-data="blog" class="my-noshow">
        <%= JSON.stringify(blog) %>
    </div>
    <div data-my-data="me" class="my-noshow">
        <%= JSON.stringify(me) %>
    </div>
    <div data-my-data="newsList" class="my-noshow">
        <%= JSON.stringify(newsList) %>
    </div>
    <%- include('wedgets/cdn') %>
    <!-- 引入 editor css -->
    <link href="https://cdn.jsdelivr.net/npm/@wangeditor/editor@latest/dist/css/style.css" rel="stylesheet">
    <!-- 引入 editor js -->
    <script src="https://cdn.jsdelivr.net/npm/@wangeditor/editor@latest/dist/index.min.js"></script>
    <script>
        $(function () {
            let $list = $('#list')
            let api_comment = '/api/comment'

            window.data = {}

            init_data()

            init_editor()
            
            function init_editor() {
                //  editor config
                const { createEditor } = window.wangEditor

                const customPaste = function(editor, event){
                    event.preventDefault()
                    const text = event.clipboardData.getData('text/plain')
                    editor.insertText(text)
                }
                const editorConfig = {
                    MENU_CONF: {},
                    customPaste
                }
                //  editor config : placeholder
                editorConfig.placeholder = '我有話要說'
                // editor 創建
                const editor = createEditor({
                    config: editorConfig,
                    selector: '#editor-container',
                    mode: 'simple'
                })

                window.editor = editor

                let $el = $('#editor-container')
                $el.on('keyup', handle_keyup)
                $el.on('click', handle_click)

                function handle_click() {
                    if (window.data.me) {
                        return
                    }
                    if (confirm('請先登入')) {
                        location.href = `/login?from=${location.pathname}`
                    }
                    return
                }
                async function handle_keyup(e) {


                    if (e.key !== 'Enter') {
                        return
                    }

                    if (e.key === 'Enter' && !e.shiftKey) {
                        let comment = editor.getHtml()
                        let reg = /(<p><br><\/p>)|(<p>[\s&nbsp;]+<\/p>)/g
                        comment = comment.replace(reg, '')
                        if (!comment.trim()) return
                        let { data: { errno, data, msg } } = await axios.post(api_comment, { html: comment, blog_id: window.data.blog.id, author_id: window.data.blog.author.id })
                        if (errno) {
                            alert('留言失敗')
                            console.log('msg')
                        }
                        let { html, time } = data
                        let { nickname, id } = window.data.me
                        editor.setHtml()
                        let htmlStr = `
                        <div>
                            ${html}
                            <a href="/other/${id}">${nickname}</a>
                            <span>${time}</span>
                        </div>`

                        $list.append(htmlStr)

                    }

                }
            }

            let $comment = $('#comment')

            $comment[0].addEventListener('drop', (e) => {
                e.preventDefault()
                e.stopImmediatePropagation()
                console.log(123)
                return false
            }, true)


            //  初始化數據
            function init_data() {
                $(`[data-my-data]`).each((index, el) => {
                    let $el = $(el)
                    let prop = $el.data('my-data')
                    try {
                        window.data[prop] = JSON.parse($el.text())
                    } catch (e) {
                        window.data[prop] = undefined
                    }
                })
                $('#data').remove()

                _init_newsList()

            }

            function _init_newsList() {
                let news = window.data.newsList

                let { newsList: { confirm, unconfirm }, total, markTime, limit } = news
                window.data._newsList = { limit, total, markTime, count: confirm.length + unconfirm.length }

                let _newsList = window.data._newsList

                if (!_newsList.count) {
                    _newsList.listOfNewsId = { confirm: { people: [], blogs: [] }, unconfirm: undefined }
                    window.data.newsList = { ..._newsList }
                    delete window.data._newsList
                    return
                }

                _newsList.listOfNewsId = {
                    unconfirm: unconfirm.length && _init_news(unconfirm) || undefined,
                    confirm: confirm.length && _init_news(confirm) || { people: [], blogs: [] }
                }

                window.data.newsList = { ..._newsList }
                delete window.data._newsList
                return
            }


            function _init_news(newsList) {
                let res = { people: [], blogs: [] }
                if (!newsList.length) {
                    return res
                }
                return newsList.reduce((initVal, { type, id }) => {
                    type === 1 && initVal.people.push(id)
                    type === 2 && initVal.blogs.push(id)
                    return initVal
                }, res)
            }


        })
    </script>
</body>

</html>